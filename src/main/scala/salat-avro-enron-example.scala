/*
 * Copyright 2013 Julian Peeters
 *   
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import models._
import com.banno.salat.avro._
import global._
import java.io.File
import scala.io._
import org.apache.avro._
import org.apache.avro.io._
import org.apache.avro.file._
import org.apache.avro.generic._

object Main extends App {

//Deserialize from File: Read DataFile and deserialize back to object 
  val streamInfile = new File("/home/julianpeeters/enron.avro")
  //val schema = Schema.parse(streamInfile)
  val schema = Schema.parse("""{"type":"record","name":"TUPLE_0","fields":[{"name":"message_id","type":["null","string"],"doc":"autogenerated from Pig Field Schema"},{"name":"date","type":["null","string"],"doc":"autogenerated from Pig Field Schema"},{"name":"from","type":["null",{"type":"record","name":"TUPLE_1","fields":[{"name":"address","type":["null","string"],"doc":"autogenerated from Pig Field Schema"},{"name":"name","type":["null","string"],"doc":"autogenerated from Pig Field Schema"}]}],"doc":"autogenerated from Pig Field Schema"},{"name":"subject","type":["null","string"],"doc":"autogenerated from Pig Field Schema"},{"name":"body","type":["null","string"],"doc":"autogenerated from Pig Field Schema"},{"name":"tos","type":["null",{"type":"array","items":["null",{"type":"record","name":"TUPLE_2","fields":[{"name":"address","type":["null","string"],"doc":"autogenerated from Pig Field Schema"},{"name":"name","type":["null","string"],"doc":"autogenerated from Pig Field Schema"}]}]}],"doc":"autogenerated from Pig Field Schema"},{"name":"ccs","type":["null",{"type":"array","items":["null",{"type":"record","name":"TUPLE_3","fields":[{"name":"address","type":["null","string"],"doc":"autogenerated from Pig Field Schema"},{"name":"name","type":["null","string"],"doc":"autogenerated from Pig Field Schema"}]}]}],"doc":"autogenerated from Pig Field Schema"},{"name":"bccs","type":["null",{"type":"array","items":["null",{"type":"record","name":"TUPLE_4","fields":[{"name":"address","type":["null","string"],"doc":"autogenerated from Pig Field Schema"},{"name":"name","type":["null","string"],"doc":"autogenerated from Pig Field Schema"}]}]}],"doc":"autogenerated from Pig Field Schema"}]}""")

  val datumReader = new GenericDatumReader[Any](schema)

  val dataFileReader = new DataFileReader(streamInfile, datumReader)
  //val sameRecordIterator = grater[EnronEmail].asObjectIteratorFromDataFile(streamInfile)
  println(dataFileReader.next())


//TODO make sure no redundant imports, repos
//TODO finish this after adding asSchemaFromFile method to salat-avro

}
